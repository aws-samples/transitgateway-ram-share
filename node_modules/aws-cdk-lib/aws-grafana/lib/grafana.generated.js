"use strict";var _a;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnWorkspace=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),cdk=require("../../core"),cfn_parse=require("../../core/lib/helpers-internal");function CfnWorkspacePropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("accountAccessType",cdk.requiredValidator)(properties.accountAccessType)),errors.collect(cdk.propertyValidator("accountAccessType",cdk.validateString)(properties.accountAccessType)),errors.collect(cdk.propertyValidator("authenticationProviders",cdk.requiredValidator)(properties.authenticationProviders)),errors.collect(cdk.propertyValidator("authenticationProviders",cdk.listValidator(cdk.validateString))(properties.authenticationProviders)),errors.collect(cdk.propertyValidator("clientToken",cdk.validateString)(properties.clientToken)),errors.collect(cdk.propertyValidator("dataSources",cdk.listValidator(cdk.validateString))(properties.dataSources)),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("grafanaVersion",cdk.validateString)(properties.grafanaVersion)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("networkAccessControl",CfnWorkspace_NetworkAccessControlPropertyValidator)(properties.networkAccessControl)),errors.collect(cdk.propertyValidator("notificationDestinations",cdk.listValidator(cdk.validateString))(properties.notificationDestinations)),errors.collect(cdk.propertyValidator("organizationRoleName",cdk.validateString)(properties.organizationRoleName)),errors.collect(cdk.propertyValidator("organizationalUnits",cdk.listValidator(cdk.validateString))(properties.organizationalUnits)),errors.collect(cdk.propertyValidator("permissionType",cdk.requiredValidator)(properties.permissionType)),errors.collect(cdk.propertyValidator("permissionType",cdk.validateString)(properties.permissionType)),errors.collect(cdk.propertyValidator("roleArn",cdk.validateString)(properties.roleArn)),errors.collect(cdk.propertyValidator("samlConfiguration",CfnWorkspace_SamlConfigurationPropertyValidator)(properties.samlConfiguration)),errors.collect(cdk.propertyValidator("stackSetName",cdk.validateString)(properties.stackSetName)),errors.collect(cdk.propertyValidator("vpcConfiguration",CfnWorkspace_VpcConfigurationPropertyValidator)(properties.vpcConfiguration)),errors.wrap('supplied properties not correct for "CfnWorkspaceProps"')}function cfnWorkspacePropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnWorkspacePropsValidator(properties).assertSuccess(),{AccountAccessType:cdk.stringToCloudFormation(properties.accountAccessType),AuthenticationProviders:cdk.listMapper(cdk.stringToCloudFormation)(properties.authenticationProviders),PermissionType:cdk.stringToCloudFormation(properties.permissionType),ClientToken:cdk.stringToCloudFormation(properties.clientToken),DataSources:cdk.listMapper(cdk.stringToCloudFormation)(properties.dataSources),Description:cdk.stringToCloudFormation(properties.description),GrafanaVersion:cdk.stringToCloudFormation(properties.grafanaVersion),Name:cdk.stringToCloudFormation(properties.name),NetworkAccessControl:cfnWorkspaceNetworkAccessControlPropertyToCloudFormation(properties.networkAccessControl),NotificationDestinations:cdk.listMapper(cdk.stringToCloudFormation)(properties.notificationDestinations),OrganizationalUnits:cdk.listMapper(cdk.stringToCloudFormation)(properties.organizationalUnits),OrganizationRoleName:cdk.stringToCloudFormation(properties.organizationRoleName),RoleArn:cdk.stringToCloudFormation(properties.roleArn),SamlConfiguration:cfnWorkspaceSamlConfigurationPropertyToCloudFormation(properties.samlConfiguration),StackSetName:cdk.stringToCloudFormation(properties.stackSetName),VpcConfiguration:cfnWorkspaceVpcConfigurationPropertyToCloudFormation(properties.vpcConfiguration)}):properties}function CfnWorkspacePropsFromCloudFormation(properties){if(properties=properties??{},typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("accountAccessType","AccountAccessType",cfn_parse.FromCloudFormation.getString(properties.AccountAccessType)),ret.addPropertyResult("authenticationProviders","AuthenticationProviders",cfn_parse.FromCloudFormation.getStringArray(properties.AuthenticationProviders)),ret.addPropertyResult("permissionType","PermissionType",cfn_parse.FromCloudFormation.getString(properties.PermissionType)),ret.addPropertyResult("clientToken","ClientToken",properties.ClientToken!=null?cfn_parse.FromCloudFormation.getString(properties.ClientToken):void 0),ret.addPropertyResult("dataSources","DataSources",properties.DataSources!=null?cfn_parse.FromCloudFormation.getStringArray(properties.DataSources):void 0),ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("grafanaVersion","GrafanaVersion",properties.GrafanaVersion!=null?cfn_parse.FromCloudFormation.getString(properties.GrafanaVersion):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("networkAccessControl","NetworkAccessControl",properties.NetworkAccessControl!=null?CfnWorkspaceNetworkAccessControlPropertyFromCloudFormation(properties.NetworkAccessControl):void 0),ret.addPropertyResult("notificationDestinations","NotificationDestinations",properties.NotificationDestinations!=null?cfn_parse.FromCloudFormation.getStringArray(properties.NotificationDestinations):void 0),ret.addPropertyResult("organizationalUnits","OrganizationalUnits",properties.OrganizationalUnits!=null?cfn_parse.FromCloudFormation.getStringArray(properties.OrganizationalUnits):void 0),ret.addPropertyResult("organizationRoleName","OrganizationRoleName",properties.OrganizationRoleName!=null?cfn_parse.FromCloudFormation.getString(properties.OrganizationRoleName):void 0),ret.addPropertyResult("roleArn","RoleArn",properties.RoleArn!=null?cfn_parse.FromCloudFormation.getString(properties.RoleArn):void 0),ret.addPropertyResult("samlConfiguration","SamlConfiguration",properties.SamlConfiguration!=null?CfnWorkspaceSamlConfigurationPropertyFromCloudFormation(properties.SamlConfiguration):void 0),ret.addPropertyResult("stackSetName","StackSetName",properties.StackSetName!=null?cfn_parse.FromCloudFormation.getString(properties.StackSetName):void 0),ret.addPropertyResult("vpcConfiguration","VpcConfiguration",properties.VpcConfiguration!=null?CfnWorkspaceVpcConfigurationPropertyFromCloudFormation(properties.VpcConfiguration):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnWorkspace extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnWorkspacePropsFromCloudFormation(resourceProperties),ret=new CfnWorkspace(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnWorkspace.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_grafana_CfnWorkspaceProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnWorkspace),error}cdk.requireProperty(props,"accountAccessType",this),cdk.requireProperty(props,"authenticationProviders",this),cdk.requireProperty(props,"permissionType",this),this.attrCreationTimestamp=cdk.Token.asString(this.getAtt("CreationTimestamp",cdk.ResolutionTypeHint.STRING)),this.attrEndpoint=cdk.Token.asString(this.getAtt("Endpoint",cdk.ResolutionTypeHint.STRING)),this.attrGrafanaVersion=cdk.Token.asString(this.getAtt("GrafanaVersion",cdk.ResolutionTypeHint.STRING)),this.attrId=cdk.Token.asString(this.getAtt("Id",cdk.ResolutionTypeHint.STRING)),this.attrModificationTimestamp=cdk.Token.asString(this.getAtt("ModificationTimestamp",cdk.ResolutionTypeHint.STRING)),this.attrSamlConfigurationStatus=cdk.Token.asString(this.getAtt("SamlConfigurationStatus",cdk.ResolutionTypeHint.STRING)),this.attrSsoClientId=cdk.Token.asString(this.getAtt("SsoClientId",cdk.ResolutionTypeHint.STRING)),this.attrStatus=cdk.Token.asString(this.getAtt("Status",cdk.ResolutionTypeHint.STRING)),this.accountAccessType=props.accountAccessType,this.authenticationProviders=props.authenticationProviders,this.permissionType=props.permissionType,this.clientToken=props.clientToken,this.dataSources=props.dataSources,this.description=props.description,this.grafanaVersion=props.grafanaVersion,this.name=props.name,this.networkAccessControl=props.networkAccessControl,this.notificationDestinations=props.notificationDestinations,this.organizationalUnits=props.organizationalUnits,this.organizationRoleName=props.organizationRoleName,this.roleArn=props.roleArn,this.samlConfiguration=props.samlConfiguration,this.stackSetName=props.stackSetName,this.vpcConfiguration=props.vpcConfiguration}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnWorkspace.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{accountAccessType:this.accountAccessType,authenticationProviders:this.authenticationProviders,permissionType:this.permissionType,clientToken:this.clientToken,dataSources:this.dataSources,description:this.description,grafanaVersion:this.grafanaVersion,name:this.name,networkAccessControl:this.networkAccessControl,notificationDestinations:this.notificationDestinations,organizationalUnits:this.organizationalUnits,organizationRoleName:this.organizationRoleName,roleArn:this.roleArn,samlConfiguration:this.samlConfiguration,stackSetName:this.stackSetName,vpcConfiguration:this.vpcConfiguration}}renderProperties(props){return cfnWorkspacePropsToCloudFormation(props)}}_a=JSII_RTTI_SYMBOL_1,CfnWorkspace[_a]={fqn:"aws-cdk-lib.aws_grafana.CfnWorkspace",version:"2.87.0"},CfnWorkspace.CFN_RESOURCE_TYPE_NAME="AWS::Grafana::Workspace",exports.CfnWorkspace=CfnWorkspace;function CfnWorkspace_AssertionAttributesPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("email",cdk.validateString)(properties.email)),errors.collect(cdk.propertyValidator("groups",cdk.validateString)(properties.groups)),errors.collect(cdk.propertyValidator("login",cdk.validateString)(properties.login)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("org",cdk.validateString)(properties.org)),errors.collect(cdk.propertyValidator("role",cdk.validateString)(properties.role)),errors.wrap('supplied properties not correct for "AssertionAttributesProperty"')}function cfnWorkspaceAssertionAttributesPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnWorkspace_AssertionAttributesPropertyValidator(properties).assertSuccess(),{Email:cdk.stringToCloudFormation(properties.email),Groups:cdk.stringToCloudFormation(properties.groups),Login:cdk.stringToCloudFormation(properties.login),Name:cdk.stringToCloudFormation(properties.name),Org:cdk.stringToCloudFormation(properties.org),Role:cdk.stringToCloudFormation(properties.role)}):properties}function CfnWorkspaceAssertionAttributesPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("email","Email",properties.Email!=null?cfn_parse.FromCloudFormation.getString(properties.Email):void 0),ret.addPropertyResult("groups","Groups",properties.Groups!=null?cfn_parse.FromCloudFormation.getString(properties.Groups):void 0),ret.addPropertyResult("login","Login",properties.Login!=null?cfn_parse.FromCloudFormation.getString(properties.Login):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("org","Org",properties.Org!=null?cfn_parse.FromCloudFormation.getString(properties.Org):void 0),ret.addPropertyResult("role","Role",properties.Role!=null?cfn_parse.FromCloudFormation.getString(properties.Role):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnWorkspace_IdpMetadataPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("url",cdk.validateString)(properties.url)),errors.collect(cdk.propertyValidator("xml",cdk.validateString)(properties.xml)),errors.wrap('supplied properties not correct for "IdpMetadataProperty"')}function cfnWorkspaceIdpMetadataPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnWorkspace_IdpMetadataPropertyValidator(properties).assertSuccess(),{Url:cdk.stringToCloudFormation(properties.url),Xml:cdk.stringToCloudFormation(properties.xml)}):properties}function CfnWorkspaceIdpMetadataPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("url","Url",properties.Url!=null?cfn_parse.FromCloudFormation.getString(properties.Url):void 0),ret.addPropertyResult("xml","Xml",properties.Xml!=null?cfn_parse.FromCloudFormation.getString(properties.Xml):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnWorkspace_NetworkAccessControlPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("prefixListIds",cdk.listValidator(cdk.validateString))(properties.prefixListIds)),errors.collect(cdk.propertyValidator("vpceIds",cdk.listValidator(cdk.validateString))(properties.vpceIds)),errors.wrap('supplied properties not correct for "NetworkAccessControlProperty"')}function cfnWorkspaceNetworkAccessControlPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnWorkspace_NetworkAccessControlPropertyValidator(properties).assertSuccess(),{PrefixListIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.prefixListIds),VpceIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.vpceIds)}):properties}function CfnWorkspaceNetworkAccessControlPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("prefixListIds","PrefixListIds",properties.PrefixListIds!=null?cfn_parse.FromCloudFormation.getStringArray(properties.PrefixListIds):void 0),ret.addPropertyResult("vpceIds","VpceIds",properties.VpceIds!=null?cfn_parse.FromCloudFormation.getStringArray(properties.VpceIds):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnWorkspace_RoleValuesPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("admin",cdk.listValidator(cdk.validateString))(properties.admin)),errors.collect(cdk.propertyValidator("editor",cdk.listValidator(cdk.validateString))(properties.editor)),errors.wrap('supplied properties not correct for "RoleValuesProperty"')}function cfnWorkspaceRoleValuesPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnWorkspace_RoleValuesPropertyValidator(properties).assertSuccess(),{Admin:cdk.listMapper(cdk.stringToCloudFormation)(properties.admin),Editor:cdk.listMapper(cdk.stringToCloudFormation)(properties.editor)}):properties}function CfnWorkspaceRoleValuesPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("admin","Admin",properties.Admin!=null?cfn_parse.FromCloudFormation.getStringArray(properties.Admin):void 0),ret.addPropertyResult("editor","Editor",properties.Editor!=null?cfn_parse.FromCloudFormation.getStringArray(properties.Editor):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnWorkspace_SamlConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("allowedOrganizations",cdk.listValidator(cdk.validateString))(properties.allowedOrganizations)),errors.collect(cdk.propertyValidator("assertionAttributes",CfnWorkspace_AssertionAttributesPropertyValidator)(properties.assertionAttributes)),errors.collect(cdk.propertyValidator("idpMetadata",cdk.requiredValidator)(properties.idpMetadata)),errors.collect(cdk.propertyValidator("idpMetadata",CfnWorkspace_IdpMetadataPropertyValidator)(properties.idpMetadata)),errors.collect(cdk.propertyValidator("loginValidityDuration",cdk.validateNumber)(properties.loginValidityDuration)),errors.collect(cdk.propertyValidator("roleValues",CfnWorkspace_RoleValuesPropertyValidator)(properties.roleValues)),errors.wrap('supplied properties not correct for "SamlConfigurationProperty"')}function cfnWorkspaceSamlConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnWorkspace_SamlConfigurationPropertyValidator(properties).assertSuccess(),{AllowedOrganizations:cdk.listMapper(cdk.stringToCloudFormation)(properties.allowedOrganizations),AssertionAttributes:cfnWorkspaceAssertionAttributesPropertyToCloudFormation(properties.assertionAttributes),IdpMetadata:cfnWorkspaceIdpMetadataPropertyToCloudFormation(properties.idpMetadata),LoginValidityDuration:cdk.numberToCloudFormation(properties.loginValidityDuration),RoleValues:cfnWorkspaceRoleValuesPropertyToCloudFormation(properties.roleValues)}):properties}function CfnWorkspaceSamlConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("allowedOrganizations","AllowedOrganizations",properties.AllowedOrganizations!=null?cfn_parse.FromCloudFormation.getStringArray(properties.AllowedOrganizations):void 0),ret.addPropertyResult("assertionAttributes","AssertionAttributes",properties.AssertionAttributes!=null?CfnWorkspaceAssertionAttributesPropertyFromCloudFormation(properties.AssertionAttributes):void 0),ret.addPropertyResult("idpMetadata","IdpMetadata",CfnWorkspaceIdpMetadataPropertyFromCloudFormation(properties.IdpMetadata)),ret.addPropertyResult("loginValidityDuration","LoginValidityDuration",properties.LoginValidityDuration!=null?cfn_parse.FromCloudFormation.getNumber(properties.LoginValidityDuration):void 0),ret.addPropertyResult("roleValues","RoleValues",properties.RoleValues!=null?CfnWorkspaceRoleValuesPropertyFromCloudFormation(properties.RoleValues):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnWorkspace_VpcConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("securityGroupIds",cdk.requiredValidator)(properties.securityGroupIds)),errors.collect(cdk.propertyValidator("securityGroupIds",cdk.listValidator(cdk.validateString))(properties.securityGroupIds)),errors.collect(cdk.propertyValidator("subnetIds",cdk.requiredValidator)(properties.subnetIds)),errors.collect(cdk.propertyValidator("subnetIds",cdk.listValidator(cdk.validateString))(properties.subnetIds)),errors.wrap('supplied properties not correct for "VpcConfigurationProperty"')}function cfnWorkspaceVpcConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnWorkspace_VpcConfigurationPropertyValidator(properties).assertSuccess(),{SecurityGroupIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.securityGroupIds),SubnetIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.subnetIds)}):properties}function CfnWorkspaceVpcConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("securityGroupIds","SecurityGroupIds",cfn_parse.FromCloudFormation.getStringArray(properties.SecurityGroupIds)),ret.addPropertyResult("subnetIds","SubnetIds",cfn_parse.FromCloudFormation.getStringArray(properties.SubnetIds)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}
