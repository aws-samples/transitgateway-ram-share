"use strict";var _a,_b,_c,_d;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnRotation=exports.CfnPlan=exports.CfnContactChannel=exports.CfnContact=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),cdk=require("../../core"),cfn_parse=require("../../core/lib/helpers-internal");function CfnContactPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("alias",cdk.requiredValidator)(properties.alias)),errors.collect(cdk.propertyValidator("alias",cdk.validateString)(properties.alias)),errors.collect(cdk.propertyValidator("displayName",cdk.requiredValidator)(properties.displayName)),errors.collect(cdk.propertyValidator("displayName",cdk.validateString)(properties.displayName)),errors.collect(cdk.propertyValidator("plan",cdk.listValidator(CfnContact_StagePropertyValidator))(properties.plan)),errors.collect(cdk.propertyValidator("type",cdk.requiredValidator)(properties.type)),errors.collect(cdk.propertyValidator("type",cdk.validateString)(properties.type)),errors.wrap('supplied properties not correct for "CfnContactProps"')}function cfnContactPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnContactPropsValidator(properties).assertSuccess(),{Alias:cdk.stringToCloudFormation(properties.alias),DisplayName:cdk.stringToCloudFormation(properties.displayName),Type:cdk.stringToCloudFormation(properties.type),Plan:cdk.listMapper(cfnContactStagePropertyToCloudFormation)(properties.plan)}):properties}function CfnContactPropsFromCloudFormation(properties){if(properties=properties??{},typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("alias","Alias",cfn_parse.FromCloudFormation.getString(properties.Alias)),ret.addPropertyResult("displayName","DisplayName",cfn_parse.FromCloudFormation.getString(properties.DisplayName)),ret.addPropertyResult("type","Type",cfn_parse.FromCloudFormation.getString(properties.Type)),ret.addPropertyResult("plan","Plan",properties.Plan!=null?cfn_parse.FromCloudFormation.getArray(CfnContactStagePropertyFromCloudFormation)(properties.Plan):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnContact extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnContactPropsFromCloudFormation(resourceProperties),ret=new CfnContact(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnContact.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_ssmcontacts_CfnContactProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnContact),error}cdk.requireProperty(props,"alias",this),cdk.requireProperty(props,"displayName",this),cdk.requireProperty(props,"type",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn",cdk.ResolutionTypeHint.STRING)),this.alias=props.alias,this.displayName=props.displayName,this.type=props.type,this.plan=props.plan}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnContact.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{alias:this.alias,displayName:this.displayName,type:this.type,plan:this.plan}}renderProperties(props){return cfnContactPropsToCloudFormation(props)}}_a=JSII_RTTI_SYMBOL_1,CfnContact[_a]={fqn:"aws-cdk-lib.aws_ssmcontacts.CfnContact",version:"2.87.0"},CfnContact.CFN_RESOURCE_TYPE_NAME="AWS::SSMContacts::Contact",exports.CfnContact=CfnContact;function CfnContact_ChannelTargetInfoPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("channelId",cdk.requiredValidator)(properties.channelId)),errors.collect(cdk.propertyValidator("channelId",cdk.validateString)(properties.channelId)),errors.collect(cdk.propertyValidator("retryIntervalInMinutes",cdk.requiredValidator)(properties.retryIntervalInMinutes)),errors.collect(cdk.propertyValidator("retryIntervalInMinutes",cdk.validateNumber)(properties.retryIntervalInMinutes)),errors.wrap('supplied properties not correct for "ChannelTargetInfoProperty"')}function cfnContactChannelTargetInfoPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnContact_ChannelTargetInfoPropertyValidator(properties).assertSuccess(),{ChannelId:cdk.stringToCloudFormation(properties.channelId),RetryIntervalInMinutes:cdk.numberToCloudFormation(properties.retryIntervalInMinutes)}):properties}function CfnContactChannelTargetInfoPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("channelId","ChannelId",cfn_parse.FromCloudFormation.getString(properties.ChannelId)),ret.addPropertyResult("retryIntervalInMinutes","RetryIntervalInMinutes",cfn_parse.FromCloudFormation.getNumber(properties.RetryIntervalInMinutes)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnContact_ContactTargetInfoPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("contactId",cdk.requiredValidator)(properties.contactId)),errors.collect(cdk.propertyValidator("contactId",cdk.validateString)(properties.contactId)),errors.collect(cdk.propertyValidator("isEssential",cdk.requiredValidator)(properties.isEssential)),errors.collect(cdk.propertyValidator("isEssential",cdk.validateBoolean)(properties.isEssential)),errors.wrap('supplied properties not correct for "ContactTargetInfoProperty"')}function cfnContactContactTargetInfoPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnContact_ContactTargetInfoPropertyValidator(properties).assertSuccess(),{ContactId:cdk.stringToCloudFormation(properties.contactId),IsEssential:cdk.booleanToCloudFormation(properties.isEssential)}):properties}function CfnContactContactTargetInfoPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("contactId","ContactId",cfn_parse.FromCloudFormation.getString(properties.ContactId)),ret.addPropertyResult("isEssential","IsEssential",cfn_parse.FromCloudFormation.getBoolean(properties.IsEssential)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnContact_StagePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("durationInMinutes",cdk.validateNumber)(properties.durationInMinutes)),errors.collect(cdk.propertyValidator("rotationIds",cdk.listValidator(cdk.validateString))(properties.rotationIds)),errors.collect(cdk.propertyValidator("targets",cdk.listValidator(CfnContact_TargetsPropertyValidator))(properties.targets)),errors.wrap('supplied properties not correct for "StageProperty"')}function cfnContactStagePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnContact_StagePropertyValidator(properties).assertSuccess(),{DurationInMinutes:cdk.numberToCloudFormation(properties.durationInMinutes),RotationIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.rotationIds),Targets:cdk.listMapper(cfnContactTargetsPropertyToCloudFormation)(properties.targets)}):properties}function CfnContactStagePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("durationInMinutes","DurationInMinutes",properties.DurationInMinutes!=null?cfn_parse.FromCloudFormation.getNumber(properties.DurationInMinutes):void 0),ret.addPropertyResult("rotationIds","RotationIds",properties.RotationIds!=null?cfn_parse.FromCloudFormation.getStringArray(properties.RotationIds):void 0),ret.addPropertyResult("targets","Targets",properties.Targets!=null?cfn_parse.FromCloudFormation.getArray(CfnContactTargetsPropertyFromCloudFormation)(properties.Targets):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnContact_TargetsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("channelTargetInfo",CfnContact_ChannelTargetInfoPropertyValidator)(properties.channelTargetInfo)),errors.collect(cdk.propertyValidator("contactTargetInfo",CfnContact_ContactTargetInfoPropertyValidator)(properties.contactTargetInfo)),errors.wrap('supplied properties not correct for "TargetsProperty"')}function cfnContactTargetsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnContact_TargetsPropertyValidator(properties).assertSuccess(),{ChannelTargetInfo:cfnContactChannelTargetInfoPropertyToCloudFormation(properties.channelTargetInfo),ContactTargetInfo:cfnContactContactTargetInfoPropertyToCloudFormation(properties.contactTargetInfo)}):properties}function CfnContactTargetsPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("channelTargetInfo","ChannelTargetInfo",properties.ChannelTargetInfo!=null?CfnContactChannelTargetInfoPropertyFromCloudFormation(properties.ChannelTargetInfo):void 0),ret.addPropertyResult("contactTargetInfo","ContactTargetInfo",properties.ContactTargetInfo!=null?CfnContactContactTargetInfoPropertyFromCloudFormation(properties.ContactTargetInfo):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnContactChannelPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("channelAddress",cdk.requiredValidator)(properties.channelAddress)),errors.collect(cdk.propertyValidator("channelAddress",cdk.validateString)(properties.channelAddress)),errors.collect(cdk.propertyValidator("channelName",cdk.requiredValidator)(properties.channelName)),errors.collect(cdk.propertyValidator("channelName",cdk.validateString)(properties.channelName)),errors.collect(cdk.propertyValidator("channelType",cdk.requiredValidator)(properties.channelType)),errors.collect(cdk.propertyValidator("channelType",cdk.validateString)(properties.channelType)),errors.collect(cdk.propertyValidator("contactId",cdk.requiredValidator)(properties.contactId)),errors.collect(cdk.propertyValidator("contactId",cdk.validateString)(properties.contactId)),errors.collect(cdk.propertyValidator("deferActivation",cdk.validateBoolean)(properties.deferActivation)),errors.wrap('supplied properties not correct for "CfnContactChannelProps"')}function cfnContactChannelPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnContactChannelPropsValidator(properties).assertSuccess(),{ChannelAddress:cdk.stringToCloudFormation(properties.channelAddress),ChannelName:cdk.stringToCloudFormation(properties.channelName),ChannelType:cdk.stringToCloudFormation(properties.channelType),ContactId:cdk.stringToCloudFormation(properties.contactId),DeferActivation:cdk.booleanToCloudFormation(properties.deferActivation)}):properties}function CfnContactChannelPropsFromCloudFormation(properties){if(properties=properties??{},typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("channelAddress","ChannelAddress",cfn_parse.FromCloudFormation.getString(properties.ChannelAddress)),ret.addPropertyResult("channelName","ChannelName",cfn_parse.FromCloudFormation.getString(properties.ChannelName)),ret.addPropertyResult("channelType","ChannelType",cfn_parse.FromCloudFormation.getString(properties.ChannelType)),ret.addPropertyResult("contactId","ContactId",cfn_parse.FromCloudFormation.getString(properties.ContactId)),ret.addPropertyResult("deferActivation","DeferActivation",properties.DeferActivation!=null?cfn_parse.FromCloudFormation.getBoolean(properties.DeferActivation):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnContactChannel extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnContactChannelPropsFromCloudFormation(resourceProperties),ret=new CfnContactChannel(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnContactChannel.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_ssmcontacts_CfnContactChannelProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnContactChannel),error}cdk.requireProperty(props,"channelAddress",this),cdk.requireProperty(props,"channelName",this),cdk.requireProperty(props,"channelType",this),cdk.requireProperty(props,"contactId",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn",cdk.ResolutionTypeHint.STRING)),this.channelAddress=props.channelAddress,this.channelName=props.channelName,this.channelType=props.channelType,this.contactId=props.contactId,this.deferActivation=props.deferActivation}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnContactChannel.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{channelAddress:this.channelAddress,channelName:this.channelName,channelType:this.channelType,contactId:this.contactId,deferActivation:this.deferActivation}}renderProperties(props){return cfnContactChannelPropsToCloudFormation(props)}}_b=JSII_RTTI_SYMBOL_1,CfnContactChannel[_b]={fqn:"aws-cdk-lib.aws_ssmcontacts.CfnContactChannel",version:"2.87.0"},CfnContactChannel.CFN_RESOURCE_TYPE_NAME="AWS::SSMContacts::ContactChannel",exports.CfnContactChannel=CfnContactChannel;function CfnPlanPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("contactId",cdk.requiredValidator)(properties.contactId)),errors.collect(cdk.propertyValidator("contactId",cdk.validateString)(properties.contactId)),errors.collect(cdk.propertyValidator("rotationIds",cdk.listValidator(cdk.validateString))(properties.rotationIds)),errors.collect(cdk.propertyValidator("stages",cdk.listValidator(CfnPlan_StagePropertyValidator))(properties.stages)),errors.wrap('supplied properties not correct for "CfnPlanProps"')}function cfnPlanPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnPlanPropsValidator(properties).assertSuccess(),{ContactId:cdk.stringToCloudFormation(properties.contactId),RotationIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.rotationIds),Stages:cdk.listMapper(cfnPlanStagePropertyToCloudFormation)(properties.stages)}):properties}function CfnPlanPropsFromCloudFormation(properties){if(properties=properties??{},typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("contactId","ContactId",cfn_parse.FromCloudFormation.getString(properties.ContactId)),ret.addPropertyResult("rotationIds","RotationIds",properties.RotationIds!=null?cfn_parse.FromCloudFormation.getStringArray(properties.RotationIds):void 0),ret.addPropertyResult("stages","Stages",properties.Stages!=null?cfn_parse.FromCloudFormation.getArray(CfnPlanStagePropertyFromCloudFormation)(properties.Stages):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnPlan extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnPlanPropsFromCloudFormation(resourceProperties),ret=new CfnPlan(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnPlan.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_ssmcontacts_CfnPlanProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnPlan),error}cdk.requireProperty(props,"contactId",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn",cdk.ResolutionTypeHint.STRING)),this.contactId=props.contactId,this.rotationIds=props.rotationIds,this.stages=props.stages}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnPlan.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{contactId:this.contactId,rotationIds:this.rotationIds,stages:this.stages}}renderProperties(props){return cfnPlanPropsToCloudFormation(props)}}_c=JSII_RTTI_SYMBOL_1,CfnPlan[_c]={fqn:"aws-cdk-lib.aws_ssmcontacts.CfnPlan",version:"2.87.0"},CfnPlan.CFN_RESOURCE_TYPE_NAME="AWS::SSMContacts::Plan",exports.CfnPlan=CfnPlan;function CfnPlan_ChannelTargetInfoPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("channelId",cdk.requiredValidator)(properties.channelId)),errors.collect(cdk.propertyValidator("channelId",cdk.validateString)(properties.channelId)),errors.collect(cdk.propertyValidator("retryIntervalInMinutes",cdk.requiredValidator)(properties.retryIntervalInMinutes)),errors.collect(cdk.propertyValidator("retryIntervalInMinutes",cdk.validateNumber)(properties.retryIntervalInMinutes)),errors.wrap('supplied properties not correct for "ChannelTargetInfoProperty"')}function cfnPlanChannelTargetInfoPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnPlan_ChannelTargetInfoPropertyValidator(properties).assertSuccess(),{ChannelId:cdk.stringToCloudFormation(properties.channelId),RetryIntervalInMinutes:cdk.numberToCloudFormation(properties.retryIntervalInMinutes)}):properties}function CfnPlanChannelTargetInfoPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("channelId","ChannelId",cfn_parse.FromCloudFormation.getString(properties.ChannelId)),ret.addPropertyResult("retryIntervalInMinutes","RetryIntervalInMinutes",cfn_parse.FromCloudFormation.getNumber(properties.RetryIntervalInMinutes)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnPlan_ContactTargetInfoPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("contactId",cdk.requiredValidator)(properties.contactId)),errors.collect(cdk.propertyValidator("contactId",cdk.validateString)(properties.contactId)),errors.collect(cdk.propertyValidator("isEssential",cdk.requiredValidator)(properties.isEssential)),errors.collect(cdk.propertyValidator("isEssential",cdk.validateBoolean)(properties.isEssential)),errors.wrap('supplied properties not correct for "ContactTargetInfoProperty"')}function cfnPlanContactTargetInfoPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnPlan_ContactTargetInfoPropertyValidator(properties).assertSuccess(),{ContactId:cdk.stringToCloudFormation(properties.contactId),IsEssential:cdk.booleanToCloudFormation(properties.isEssential)}):properties}function CfnPlanContactTargetInfoPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("contactId","ContactId",cfn_parse.FromCloudFormation.getString(properties.ContactId)),ret.addPropertyResult("isEssential","IsEssential",cfn_parse.FromCloudFormation.getBoolean(properties.IsEssential)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnPlan_StagePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("durationInMinutes",cdk.requiredValidator)(properties.durationInMinutes)),errors.collect(cdk.propertyValidator("durationInMinutes",cdk.validateNumber)(properties.durationInMinutes)),errors.collect(cdk.propertyValidator("targets",cdk.listValidator(CfnPlan_TargetsPropertyValidator))(properties.targets)),errors.wrap('supplied properties not correct for "StageProperty"')}function cfnPlanStagePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnPlan_StagePropertyValidator(properties).assertSuccess(),{DurationInMinutes:cdk.numberToCloudFormation(properties.durationInMinutes),Targets:cdk.listMapper(cfnPlanTargetsPropertyToCloudFormation)(properties.targets)}):properties}function CfnPlanStagePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("durationInMinutes","DurationInMinutes",cfn_parse.FromCloudFormation.getNumber(properties.DurationInMinutes)),ret.addPropertyResult("targets","Targets",properties.Targets!=null?cfn_parse.FromCloudFormation.getArray(CfnPlanTargetsPropertyFromCloudFormation)(properties.Targets):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnPlan_TargetsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("channelTargetInfo",CfnPlan_ChannelTargetInfoPropertyValidator)(properties.channelTargetInfo)),errors.collect(cdk.propertyValidator("contactTargetInfo",CfnPlan_ContactTargetInfoPropertyValidator)(properties.contactTargetInfo)),errors.wrap('supplied properties not correct for "TargetsProperty"')}function cfnPlanTargetsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnPlan_TargetsPropertyValidator(properties).assertSuccess(),{ChannelTargetInfo:cfnPlanChannelTargetInfoPropertyToCloudFormation(properties.channelTargetInfo),ContactTargetInfo:cfnPlanContactTargetInfoPropertyToCloudFormation(properties.contactTargetInfo)}):properties}function CfnPlanTargetsPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("channelTargetInfo","ChannelTargetInfo",properties.ChannelTargetInfo!=null?CfnPlanChannelTargetInfoPropertyFromCloudFormation(properties.ChannelTargetInfo):void 0),ret.addPropertyResult("contactTargetInfo","ContactTargetInfo",properties.ContactTargetInfo!=null?CfnPlanContactTargetInfoPropertyFromCloudFormation(properties.ContactTargetInfo):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnRotationPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("contactIds",cdk.requiredValidator)(properties.contactIds)),errors.collect(cdk.propertyValidator("contactIds",cdk.listValidator(cdk.validateString))(properties.contactIds)),errors.collect(cdk.propertyValidator("name",cdk.requiredValidator)(properties.name)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("recurrence",cdk.requiredValidator)(properties.recurrence)),errors.collect(cdk.propertyValidator("recurrence",CfnRotation_RecurrenceSettingsPropertyValidator)(properties.recurrence)),errors.collect(cdk.propertyValidator("startTime",cdk.requiredValidator)(properties.startTime)),errors.collect(cdk.propertyValidator("startTime",cdk.validateString)(properties.startTime)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("timeZoneId",cdk.requiredValidator)(properties.timeZoneId)),errors.collect(cdk.propertyValidator("timeZoneId",cdk.validateString)(properties.timeZoneId)),errors.wrap('supplied properties not correct for "CfnRotationProps"')}function cfnRotationPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnRotationPropsValidator(properties).assertSuccess(),{ContactIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.contactIds),Name:cdk.stringToCloudFormation(properties.name),Recurrence:cfnRotationRecurrenceSettingsPropertyToCloudFormation(properties.recurrence),StartTime:cdk.stringToCloudFormation(properties.startTime),TimeZoneId:cdk.stringToCloudFormation(properties.timeZoneId),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnRotationPropsFromCloudFormation(properties){if(properties=properties??{},typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("contactIds","ContactIds",cfn_parse.FromCloudFormation.getStringArray(properties.ContactIds)),ret.addPropertyResult("name","Name",cfn_parse.FromCloudFormation.getString(properties.Name)),ret.addPropertyResult("recurrence","Recurrence",CfnRotationRecurrenceSettingsPropertyFromCloudFormation(properties.Recurrence)),ret.addPropertyResult("startTime","StartTime",cfn_parse.FromCloudFormation.getString(properties.StartTime)),ret.addPropertyResult("timeZoneId","TimeZoneId",cfn_parse.FromCloudFormation.getString(properties.TimeZoneId)),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnRotation extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnRotationPropsFromCloudFormation(resourceProperties),ret=new CfnRotation(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnRotation.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_ssmcontacts_CfnRotationProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnRotation),error}cdk.requireProperty(props,"contactIds",this),cdk.requireProperty(props,"name",this),cdk.requireProperty(props,"recurrence",this),cdk.requireProperty(props,"startTime",this),cdk.requireProperty(props,"timeZoneId",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn",cdk.ResolutionTypeHint.STRING)),this.contactIds=props.contactIds,this.name=props.name,this.recurrence=props.recurrence,this.startTime=props.startTime,this.timeZoneId=props.timeZoneId,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::SSMContacts::Rotation",props.tags,{tagPropertyName:"tags"})}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnRotation.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{contactIds:this.contactIds,name:this.name,recurrence:this.recurrence,startTime:this.startTime,timeZoneId:this.timeZoneId,tags:this.tags.renderTags()}}renderProperties(props){return cfnRotationPropsToCloudFormation(props)}}_d=JSII_RTTI_SYMBOL_1,CfnRotation[_d]={fqn:"aws-cdk-lib.aws_ssmcontacts.CfnRotation",version:"2.87.0"},CfnRotation.CFN_RESOURCE_TYPE_NAME="AWS::SSMContacts::Rotation",exports.CfnRotation=CfnRotation;function CfnRotation_CoverageTimePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("endTime",cdk.requiredValidator)(properties.endTime)),errors.collect(cdk.propertyValidator("endTime",cdk.validateString)(properties.endTime)),errors.collect(cdk.propertyValidator("startTime",cdk.requiredValidator)(properties.startTime)),errors.collect(cdk.propertyValidator("startTime",cdk.validateString)(properties.startTime)),errors.wrap('supplied properties not correct for "CoverageTimeProperty"')}function cfnRotationCoverageTimePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnRotation_CoverageTimePropertyValidator(properties).assertSuccess(),{EndTime:cdk.stringToCloudFormation(properties.endTime),StartTime:cdk.stringToCloudFormation(properties.startTime)}):properties}function CfnRotationCoverageTimePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("endTime","EndTime",cfn_parse.FromCloudFormation.getString(properties.EndTime)),ret.addPropertyResult("startTime","StartTime",cfn_parse.FromCloudFormation.getString(properties.StartTime)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnRotation_MonthlySettingPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("dayOfMonth",cdk.requiredValidator)(properties.dayOfMonth)),errors.collect(cdk.propertyValidator("dayOfMonth",cdk.validateNumber)(properties.dayOfMonth)),errors.collect(cdk.propertyValidator("handOffTime",cdk.requiredValidator)(properties.handOffTime)),errors.collect(cdk.propertyValidator("handOffTime",cdk.validateString)(properties.handOffTime)),errors.wrap('supplied properties not correct for "MonthlySettingProperty"')}function cfnRotationMonthlySettingPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnRotation_MonthlySettingPropertyValidator(properties).assertSuccess(),{DayOfMonth:cdk.numberToCloudFormation(properties.dayOfMonth),HandOffTime:cdk.stringToCloudFormation(properties.handOffTime)}):properties}function CfnRotationMonthlySettingPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("dayOfMonth","DayOfMonth",cfn_parse.FromCloudFormation.getNumber(properties.DayOfMonth)),ret.addPropertyResult("handOffTime","HandOffTime",cfn_parse.FromCloudFormation.getString(properties.HandOffTime)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnRotation_RecurrenceSettingsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("dailySettings",cdk.listValidator(cdk.validateString))(properties.dailySettings)),errors.collect(cdk.propertyValidator("monthlySettings",cdk.listValidator(CfnRotation_MonthlySettingPropertyValidator))(properties.monthlySettings)),errors.collect(cdk.propertyValidator("numberOfOnCalls",cdk.requiredValidator)(properties.numberOfOnCalls)),errors.collect(cdk.propertyValidator("numberOfOnCalls",cdk.validateNumber)(properties.numberOfOnCalls)),errors.collect(cdk.propertyValidator("recurrenceMultiplier",cdk.requiredValidator)(properties.recurrenceMultiplier)),errors.collect(cdk.propertyValidator("recurrenceMultiplier",cdk.validateNumber)(properties.recurrenceMultiplier)),errors.collect(cdk.propertyValidator("shiftCoverages",cdk.listValidator(CfnRotation_ShiftCoveragePropertyValidator))(properties.shiftCoverages)),errors.collect(cdk.propertyValidator("weeklySettings",cdk.listValidator(CfnRotation_WeeklySettingPropertyValidator))(properties.weeklySettings)),errors.wrap('supplied properties not correct for "RecurrenceSettingsProperty"')}function cfnRotationRecurrenceSettingsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnRotation_RecurrenceSettingsPropertyValidator(properties).assertSuccess(),{DailySettings:cdk.listMapper(cdk.stringToCloudFormation)(properties.dailySettings),MonthlySettings:cdk.listMapper(cfnRotationMonthlySettingPropertyToCloudFormation)(properties.monthlySettings),NumberOfOnCalls:cdk.numberToCloudFormation(properties.numberOfOnCalls),RecurrenceMultiplier:cdk.numberToCloudFormation(properties.recurrenceMultiplier),ShiftCoverages:cdk.listMapper(cfnRotationShiftCoveragePropertyToCloudFormation)(properties.shiftCoverages),WeeklySettings:cdk.listMapper(cfnRotationWeeklySettingPropertyToCloudFormation)(properties.weeklySettings)}):properties}function CfnRotationRecurrenceSettingsPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("dailySettings","DailySettings",properties.DailySettings!=null?cfn_parse.FromCloudFormation.getStringArray(properties.DailySettings):void 0),ret.addPropertyResult("monthlySettings","MonthlySettings",properties.MonthlySettings!=null?cfn_parse.FromCloudFormation.getArray(CfnRotationMonthlySettingPropertyFromCloudFormation)(properties.MonthlySettings):void 0),ret.addPropertyResult("numberOfOnCalls","NumberOfOnCalls",cfn_parse.FromCloudFormation.getNumber(properties.NumberOfOnCalls)),ret.addPropertyResult("recurrenceMultiplier","RecurrenceMultiplier",cfn_parse.FromCloudFormation.getNumber(properties.RecurrenceMultiplier)),ret.addPropertyResult("shiftCoverages","ShiftCoverages",properties.ShiftCoverages!=null?cfn_parse.FromCloudFormation.getArray(CfnRotationShiftCoveragePropertyFromCloudFormation)(properties.ShiftCoverages):void 0),ret.addPropertyResult("weeklySettings","WeeklySettings",properties.WeeklySettings!=null?cfn_parse.FromCloudFormation.getArray(CfnRotationWeeklySettingPropertyFromCloudFormation)(properties.WeeklySettings):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnRotation_ShiftCoveragePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("coverageTimes",cdk.requiredValidator)(properties.coverageTimes)),errors.collect(cdk.propertyValidator("coverageTimes",cdk.listValidator(CfnRotation_CoverageTimePropertyValidator))(properties.coverageTimes)),errors.collect(cdk.propertyValidator("dayOfWeek",cdk.requiredValidator)(properties.dayOfWeek)),errors.collect(cdk.propertyValidator("dayOfWeek",cdk.validateString)(properties.dayOfWeek)),errors.wrap('supplied properties not correct for "ShiftCoverageProperty"')}function cfnRotationShiftCoveragePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnRotation_ShiftCoveragePropertyValidator(properties).assertSuccess(),{CoverageTimes:cdk.listMapper(cfnRotationCoverageTimePropertyToCloudFormation)(properties.coverageTimes),DayOfWeek:cdk.stringToCloudFormation(properties.dayOfWeek)}):properties}function CfnRotationShiftCoveragePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("coverageTimes","CoverageTimes",cfn_parse.FromCloudFormation.getArray(CfnRotationCoverageTimePropertyFromCloudFormation)(properties.CoverageTimes)),ret.addPropertyResult("dayOfWeek","DayOfWeek",cfn_parse.FromCloudFormation.getString(properties.DayOfWeek)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnRotation_WeeklySettingPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("dayOfWeek",cdk.requiredValidator)(properties.dayOfWeek)),errors.collect(cdk.propertyValidator("dayOfWeek",cdk.validateString)(properties.dayOfWeek)),errors.collect(cdk.propertyValidator("handOffTime",cdk.requiredValidator)(properties.handOffTime)),errors.collect(cdk.propertyValidator("handOffTime",cdk.validateString)(properties.handOffTime)),errors.wrap('supplied properties not correct for "WeeklySettingProperty"')}function cfnRotationWeeklySettingPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnRotation_WeeklySettingPropertyValidator(properties).assertSuccess(),{DayOfWeek:cdk.stringToCloudFormation(properties.dayOfWeek),HandOffTime:cdk.stringToCloudFormation(properties.handOffTime)}):properties}function CfnRotationWeeklySettingPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("dayOfWeek","DayOfWeek",cfn_parse.FromCloudFormation.getString(properties.DayOfWeek)),ret.addPropertyResult("handOffTime","HandOffTime",cfn_parse.FromCloudFormation.getString(properties.HandOffTime)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}
