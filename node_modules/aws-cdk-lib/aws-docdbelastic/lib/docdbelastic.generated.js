"use strict";var _a;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnCluster=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),cdk=require("../../core"),cfn_parse=require("../../core/lib/helpers-internal");function CfnClusterPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("adminUserName",cdk.requiredValidator)(properties.adminUserName)),errors.collect(cdk.propertyValidator("adminUserName",cdk.validateString)(properties.adminUserName)),errors.collect(cdk.propertyValidator("adminUserPassword",cdk.validateString)(properties.adminUserPassword)),errors.collect(cdk.propertyValidator("authType",cdk.requiredValidator)(properties.authType)),errors.collect(cdk.propertyValidator("authType",cdk.validateString)(properties.authType)),errors.collect(cdk.propertyValidator("clusterName",cdk.requiredValidator)(properties.clusterName)),errors.collect(cdk.propertyValidator("clusterName",cdk.validateString)(properties.clusterName)),errors.collect(cdk.propertyValidator("kmsKeyId",cdk.validateString)(properties.kmsKeyId)),errors.collect(cdk.propertyValidator("preferredMaintenanceWindow",cdk.validateString)(properties.preferredMaintenanceWindow)),errors.collect(cdk.propertyValidator("shardCapacity",cdk.requiredValidator)(properties.shardCapacity)),errors.collect(cdk.propertyValidator("shardCapacity",cdk.validateNumber)(properties.shardCapacity)),errors.collect(cdk.propertyValidator("shardCount",cdk.requiredValidator)(properties.shardCount)),errors.collect(cdk.propertyValidator("shardCount",cdk.validateNumber)(properties.shardCount)),errors.collect(cdk.propertyValidator("subnetIds",cdk.listValidator(cdk.validateString))(properties.subnetIds)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("vpcSecurityGroupIds",cdk.listValidator(cdk.validateString))(properties.vpcSecurityGroupIds)),errors.wrap('supplied properties not correct for "CfnClusterProps"')}function cfnClusterPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnClusterPropsValidator(properties).assertSuccess(),{AdminUserName:cdk.stringToCloudFormation(properties.adminUserName),AuthType:cdk.stringToCloudFormation(properties.authType),ClusterName:cdk.stringToCloudFormation(properties.clusterName),ShardCapacity:cdk.numberToCloudFormation(properties.shardCapacity),ShardCount:cdk.numberToCloudFormation(properties.shardCount),AdminUserPassword:cdk.stringToCloudFormation(properties.adminUserPassword),KmsKeyId:cdk.stringToCloudFormation(properties.kmsKeyId),PreferredMaintenanceWindow:cdk.stringToCloudFormation(properties.preferredMaintenanceWindow),SubnetIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.subnetIds),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),VpcSecurityGroupIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.vpcSecurityGroupIds)}):properties}function CfnClusterPropsFromCloudFormation(properties){if(properties=properties??{},typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("adminUserName","AdminUserName",cfn_parse.FromCloudFormation.getString(properties.AdminUserName)),ret.addPropertyResult("authType","AuthType",cfn_parse.FromCloudFormation.getString(properties.AuthType)),ret.addPropertyResult("clusterName","ClusterName",cfn_parse.FromCloudFormation.getString(properties.ClusterName)),ret.addPropertyResult("shardCapacity","ShardCapacity",cfn_parse.FromCloudFormation.getNumber(properties.ShardCapacity)),ret.addPropertyResult("shardCount","ShardCount",cfn_parse.FromCloudFormation.getNumber(properties.ShardCount)),ret.addPropertyResult("adminUserPassword","AdminUserPassword",properties.AdminUserPassword!=null?cfn_parse.FromCloudFormation.getString(properties.AdminUserPassword):void 0),ret.addPropertyResult("kmsKeyId","KmsKeyId",properties.KmsKeyId!=null?cfn_parse.FromCloudFormation.getString(properties.KmsKeyId):void 0),ret.addPropertyResult("preferredMaintenanceWindow","PreferredMaintenanceWindow",properties.PreferredMaintenanceWindow!=null?cfn_parse.FromCloudFormation.getString(properties.PreferredMaintenanceWindow):void 0),ret.addPropertyResult("subnetIds","SubnetIds",properties.SubnetIds!=null?cfn_parse.FromCloudFormation.getStringArray(properties.SubnetIds):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("vpcSecurityGroupIds","VpcSecurityGroupIds",properties.VpcSecurityGroupIds!=null?cfn_parse.FromCloudFormation.getStringArray(properties.VpcSecurityGroupIds):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnCluster extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnClusterPropsFromCloudFormation(resourceProperties),ret=new CfnCluster(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnCluster.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_docdbelastic_CfnClusterProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnCluster),error}cdk.requireProperty(props,"adminUserName",this),cdk.requireProperty(props,"authType",this),cdk.requireProperty(props,"clusterName",this),cdk.requireProperty(props,"shardCapacity",this),cdk.requireProperty(props,"shardCount",this),this.attrClusterArn=cdk.Token.asString(this.getAtt("ClusterArn",cdk.ResolutionTypeHint.STRING)),this.attrClusterEndpoint=cdk.Token.asString(this.getAtt("ClusterEndpoint",cdk.ResolutionTypeHint.STRING)),this.adminUserName=props.adminUserName,this.authType=props.authType,this.clusterName=props.clusterName,this.shardCapacity=props.shardCapacity,this.shardCount=props.shardCount,this.adminUserPassword=props.adminUserPassword,this.kmsKeyId=props.kmsKeyId,this.preferredMaintenanceWindow=props.preferredMaintenanceWindow,this.subnetIds=props.subnetIds,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::DocDBElastic::Cluster",props.tags,{tagPropertyName:"tags"}),this.vpcSecurityGroupIds=props.vpcSecurityGroupIds}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnCluster.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{adminUserName:this.adminUserName,authType:this.authType,clusterName:this.clusterName,shardCapacity:this.shardCapacity,shardCount:this.shardCount,adminUserPassword:this.adminUserPassword,kmsKeyId:this.kmsKeyId,preferredMaintenanceWindow:this.preferredMaintenanceWindow,subnetIds:this.subnetIds,tags:this.tags.renderTags(),vpcSecurityGroupIds:this.vpcSecurityGroupIds}}renderProperties(props){return cfnClusterPropsToCloudFormation(props)}}_a=JSII_RTTI_SYMBOL_1,CfnCluster[_a]={fqn:"aws-cdk-lib.aws_docdbelastic.CfnCluster",version:"2.87.0"},CfnCluster.CFN_RESOURCE_TYPE_NAME="AWS::DocDBElastic::Cluster",exports.CfnCluster=CfnCluster;
